require 'set'
P1, P2 = open('day22.txt').each_line("\n\n").map { _1.chomp.lines.drop(1).map(&:to_i) }
# P1, P2 = DATA.each_line("\n\n").map { _1.chomp.lines.drop(1).map(&:to_i) }

p1,p2=P1.dup,P2.dup

def play(p1, p2)
	c1, c2 = p1.shift, p2.shift
	if yield c1, c2
		p1.append(c1, c2)
	else
		p2.append(c2, c1)
	end
end


play p1, p2 do _1 <= _2 end until p1.empty? || p2.empty?
# 	p1,p2,c1,c2 = p2, p1, c2, c1 if (c1 = p1.shift) < (c2 = p2.shift)
# 	p1 += [c1,c2]
# end
p p1.reverse.unshift(0).each_with_index.map(&:*).sum

# 32760
def recur(p1, p2)
	memo=Set.new

	until p1.empty? || p2.empty?
		memo.add?([p1, p2].hash) or return true

		c1, c2 = p1.shift, p2.shift

		if (c1 <= p1.length && c2 <= p2.length ? recur(p1.first(c1), p2.first(c2)) : c2 < c1)
			p1.append(c1, c2)
		else
			p2.append(c2, c1)
		end
	end

	p2.empty?
end

recur P1, P2
P1.reverse.unshift(0).each_with_index.map(&:*).sum == 32760 or fail

__END__
Player 1:
9
2
6
3
1

Player 2:
5
8
4
7
10
